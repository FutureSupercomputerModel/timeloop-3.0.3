# Copyright (c) 2019, NVIDIA CORPORATION. All rights reserved.
# 
# Redistribution and use in source and binary forms, with or without
# modification, are permitted provided that the following conditions
# are met:
#  * Redistributions of source code must retain the above copyright
#    notice, this list of conditions and the following disclaimer.
#  * Redistributions in binary form must reproduce the above copyright
#    notice, this list of conditions and the following disclaimer in the
#    documentation and/or other materials provided with the distribution.
#  * Neither the name of NVIDIA CORPORATION nor the names of its
#    contributors may be used to endorse or promote products derived
#    from this software without specific prior written permission.
# 
# THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS ``AS IS'' AND ANY
# EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
# IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR
# PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL THE COPYRIGHT OWNER OR
# CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,
# EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,
# PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR
# PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY
# OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
# (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
# OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.

mapper:
  algorithm: exhaustive
  optimization-metrics:
  - delay
  search-size: 0
  victory-condition: 100

arch:
  version: 0.2
  
  subtree:
  - name: System
    
    local:
    - name: MainMemory
      class: DRAM
      attributes:
        width: 256
        block-size: 32
        word-bits: 8

    subtree:
    - name: Chip
      attributes:
        technology: 40nm

      local:
      - name: GlobalBuffer # 256KB buffer
        class: SRAM
        attributes:
          depth: 8192
          width: 256
          block-size: 32
          word-bits: 8
        
      subtree:
      - name: PE[0..255]
      
        local:
        - name: AReg
          class: regfile
          attributes:
            depth: 1
            width: 8
            block-size: 1
            word-bits: 8
            meshX: 16
        - name: BReg
          class: regfile
          attributes:
            depth: 1
            width: 8
            block-size: 1
            word-bits: 8
            meshX: 16
        - name: ZReg
          class: regfile
          attributes:
            depth: 1
            width: 8
            block-size: 1
            word-bits: 8
            meshX: 16
        - name: MACC
          class: intmac
          attributes:
            datawidth: 8
            meshX: 16

architecture_constraints:
  targets:
    - target: MainMemory
      type: bypass
      bypass: []
      keep: [A, B, Z]
    - target: GlobalBuffer
      type: bypass
      bypass: []
      keep: [A, B, Z]

    - target: AReg
      type: bypass
      bypass: [B,Z]
      keep: [A]
    - target: AReg
      type: temporal
      factors: M=1 N=1 K=1

    - target: BReg
      type: bypass
      bypass: [A,Z]
      keep: [B]
    - target: BReg
      type: temporal
      factors: M=1 N=1 K=1

    - target: ZReg
      type: bypass
      bypass: [A,B]
      keep: [Z]
    - target: ZReg
      type: temporal
      factors: M=1 N=1 K=1


mapspace:
  constraints:
  # Level Bypass
  

  # Temporal
  # - target: GlobalBuffer
  #   type: temporal
  # Spatial
  - target: GlobalBuffer
    type: spatial
    factors: M=16 N=16 K=1
    # permutation: CK
    # # split: 1
    # #do not spatially split on RSPQ
    # factors: R=1 S=1 P=1 Q=1
  # - target: AReg
  #   type: temporal
  #   factors: M=1 N=1 K=1

problem:
  shape: gemm-ABZ
  M: 512
  N: 512
  K: 512
